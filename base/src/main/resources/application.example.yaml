fraho:
  crypt:
    rounds: 50000         # encryption rounds for passwords
    algorithm: SHA512     # DES, MD5, SHA256, SHA512
  jwt:
    token:
      expiration: 1 hour     # minute(s), hour(s), day(s)
      algorithm: ES256       # HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
      pub: pub.key           # file, only used for RSA and EC
      priv: priv.key         # file, only used for RSA and EC
      hmac: null             # file, only used for HMAC
      issuer: fraho-security # iss field of token
    refresh:
      expiration: 1 day   # minute(s), hour(s), day(s)
      length: 24          # bytes
      deviceIdLength: 32  # bytes
      cache:
        impl: null
        # Implemenation of eu.fraho.spring.securityJwt.service.RefreshTokenStore, my implementations:
        #   null                                                     (built-in) Disable refresh tokens
        #   eu.fraho.spring.securityJwt.service.InternalTokenStore   (dependency: security-jwt-internal) Store refresh tokens in memory
        #   eu.fraho.spring.securityJwt.service.MemcacheTokenStore   (dependency: security-jwt-memcache) Store refresh tokens at an external memcache server
        prefix: fraho-refresh  # prefix for all map entry keys
  totp:
    variance: 3  # allowed timewindows for totp tokens
    length:   16 # bytes
